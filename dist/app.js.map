{"version":3,"sources":["app.ts"],"names":[],"mappings":";AAAA,QAAO,6BACP,CAAC,CADmC;AACpC,MAAO,cAAc,WAAa,sBAAsB,CAAC,CAAC;AAC1D,MAAO,IAAI,WAAuB,MAAM,CAAC,CAAC;AAE1C,OAAO,CAAC,OAAO,GAAG,CAAC,OAAW;IAC1B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;IACnE,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG;YAC9B,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACzB,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAW;gBACvB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACnC,aAAa,IAAI,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE;gBAEV,IAAI,aAAa,GAAqB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBAEhE,IAAI,GAAG,GAAoB,OAAO,CAAC;gBACnC,GAAG,CAAC,aAAa,GAAG,aAAa,CAAC;gBAGlC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrB,GAAG,CAAC,gBAAgB,GAAG,OAAO,CAAC,UAAU,CAAC;oBAC1C,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,UAAU,CAAC;gBAC7C,CAAC;gBAGD,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;oBACtB,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,WAAW,CAAC;oBAC5C,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,WAAW,CAAC;gBACnD,CAAC;gBAED,IAAI,OAAO,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;gBACtC,OAAO,CAAC,OAAO,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAK;YACjB,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAA","file":"app.js","sourcesContent":["import 'source-map-support/register'//to get ts stacktraces\nimport swaggerService   = require(\"./lib/SwaggerService\");\nimport http             = require(\"http\");\n\nexports.process = (options:any) => {\n    if (!options) {\n        console.error(\"Sorry. Please supply options with swaggerPath\");\n    } else {\n        http.get(options.swaggerPath, (res) => {\n            res.setEncoding(\"utf-8\");\n            var swaggerString = \"\";\n            res.on(\"data\", (data:string) => {\n                console.log(\"Swagger json found!\");\n                swaggerString += data;\n            });\n\n            res.on(\"end\", () => {\n                // swagger object coming from server\n                var swaggerObject: Swagger.ISwagger = JSON.parse(swaggerString);\n\n                var opt: ISwaggerOptions = options;\n                opt.swaggerObject = swaggerObject;\n\n                // for backwards compatibility\n                if (options.moduleName) {\n                    opt.clientModuleName = options.moduleName;\n                    opt.modelModuleName = options.moduleName;\n                }\n\n                // for backwards compatibility\n                if (options.destination) {\n                    opt.clientDestination = options.destination;\n                    opt.interfaceDestination = options.destination;\n                }\n\n                var swagSrv = new swaggerService(opt);\n                swagSrv.process();\n            });\n        }).on(\"error\", (e:any) => {\n            console.log(\"Error : \" + e.message);\n        });\n    }\n}\n"]}